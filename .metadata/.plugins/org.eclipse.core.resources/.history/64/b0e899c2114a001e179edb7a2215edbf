package a64Multithreading_in_Java_Part2;

/*
 * denilo 6 phases untai :
   0 -> New
   1 -> Running
   2 -> Blocked
   3 -> Waiting(join)
   4 -> Waiting(specific time/sleep)
   5 -> Terminated
 */

public class iThread_life_cycle {

	public static void main(String[] args) throws Exception {

		Runnable r1 = () -> {
			for(int i=0; i<10; i++) {
			System.out.println("Hi Employee "+Thread.currentThread().getName()+ " >> " + Thread.currentThread().getId());
			}
		};
			
		Thread t1 = new Thread(r1, "T1");
		System.out.println(t1.getState());
		t1.start();
		System.out.println(t1.getState());
		t1.sleep(5000);
		System.out.println(t1.getState());
		
		Runnable r2 = () -> {
			for(int i=0; i<20; i++) {
			System.out.println("Hi Manager "+Thread.currentThread().getName()+ " >> " + Thread.currentThread().getId());
			}
		};
					
		Thread t2 = new Thread(r2, "T2");
		System.out.println(t1.getState());
		t2.start();
		System.out.println(t1.getState());
		
	}
}
